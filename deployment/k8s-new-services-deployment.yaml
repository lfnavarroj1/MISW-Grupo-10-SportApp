###################################
# score-management
###################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: score-management
  labels:
    app: score-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: score-management
  template:
    metadata:
      labels:
        app: score-management
    spec:
      containers:
        - name: score-management
          image: us-central1-docker.pkg.dev/devnativa24/dev-nativa-24-container/score_management:1.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: "DATABASE_URL"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: uri
            - name: USERS_PATH
              value: http://service-user-management
          ports:
            - containerPort: 3004
          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: score-management-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3004
    type: HTTP
    requestPath: /scores/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-score-management
  annotations:
    cloud.google.com/backend-config: '{"default": "score-management-config"}'
spec:
  type: NodePort
  selector:
    app: score-management
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3004
      nodePort: 31015

---
###################################
# create-offer
###################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: create-offer
  labels:
    app: create-offer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: create-offer
  template:
    metadata:
      labels:
        app: create-offer
    spec:
      containers:
        - name: create-offer
          image: us-central1-docker.pkg.dev/devnativa24/dev-nativa-24-container/create_offer:1.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: USERS_PATH
              value: http://service-user-management
            - name: ROUTE_PATH
              value: http://service-route-management
            - name: POST_PATH
              value: http://service-post-management
            - name: OFFER_PATH
              value: http://service-offer-management
            - name: SCORE_PATH
              value: http://servicio-score-management
          ports:
            - containerPort: 3006
          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: create-offer-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3006
    type: HTTP
    requestPath: /rf004/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-create-offer
  annotations:
    cloud.google.com/backend-config: '{"default": "create-offer-config"}'
spec:
  type: NodePort
  selector:
    app: create-offer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3006
      nodePort: 31014

---
###################################
# create-post
###################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: create-post
  labels:
    app: create-post
spec:
  replicas: 1
  selector:
    matchLabels:
      app: create-post
  template:
    metadata:
      labels:
        app: create-post
    spec:
      containers:
        - name: create-post
          image: us-central1-docker.pkg.dev/devnativa24/dev-nativa-24-container/create_post:1.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: USERS_PATH
              value: http://service-user-management
            - name: ROUTE_PATH
              value: http://service-route-management
            - name: POST_PATH
              value: http://service-post-management
            - name: OFFER_PATH
              value: http://service-offer-management
            - name: SCORE_PATH
              value: http://servicio-score-management
          ports:
            - containerPort: 3005
          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: create-post-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3005
    type: HTTP
    requestPath: /rf003/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-create-post
  annotations:
    cloud.google.com/backend-config: '{"default": "create-post-config"}'
spec:
  type: NodePort
  selector:
    app: create-post
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3005
      nodePort: 31013

---
###################################
# filter-post
###################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: filter-post
  labels:
    app: filter-post
spec:
  replicas: 1
  selector:
    matchLabels:
      app: filter-post
  template:
    metadata:
      labels:
        app: filter-post
    spec:
      containers:
        - name: filter-post
          image: us-central1-docker.pkg.dev/devnativa24/dev-nativa-24-container/filter_post:1.0
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: USERS_PATH
              value: http://service-user-management
            - name: ROUTE_PATH
              value: http://service-route-management
            - name: POST_PATH
              value: http://service-post-management
            - name: OFFER_PATH
              value: http://service-offer-management
            - name: SCORE_PATH
              value: http://servicio-score-management
          ports:
            - containerPort: 3007
          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: filter-post-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3007
    type: HTTP
    requestPath: /rf005/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-filter-post
  annotations:
    cloud.google.com/backend-config: '{"default": "filter-post-config"}'
spec:
  type: NodePort
  selector:
    app: filter-post
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3007
      nodePort: 31012
